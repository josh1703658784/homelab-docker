---

# OFFICIAL: https://tailscale.dev/blog/docker-mod-tailscale
# UNofficial: docker + tailscale: https://mrpowergamerbr.com/us/blog/2023-03-20-untangling-your-network-tailscale-in-docker-compose/


services:


  miniflux:
    extends:
      file: ./../common/services.yml
      service: tailscale-proxy
    environment:
      - TS_HOSTNAME=miniflux
      - TS_SERVE_PORT=${MINIFLUX_PORT?error}
    tmpfs:
      - /tmp
    networks:
      - miniflux
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID


  miniflux-svc:
    image: miniflux/miniflux:latest
    healthcheck:
      test: ["CMD", "/usr/bin/miniflux", "-healthcheck", "auto"]
    depends_on:
      db:
        condition: service_healthy
    network_mode: service:miniflux
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER?error}:${POSTGRES_PASSWORD?error}@db/${POSTGRES_DB?error}?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_USER?error}
      - ADMIN_PASSWORD=${MINIFLUX_PASS?error}

  db:
    image: postgres:15
    networks:
      - miniflux
    environment:
      - POSTGRES_USER=${POSTGRES_USER?error}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?error}
      - POSTGRES_DB=${POSTGRES_DB?error}
    volumes:
      - ${MINIFLUX_DB_APP_DATA?error}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
