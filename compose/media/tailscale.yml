---

# interpolation regex
# https://docs.docker.com/compose/environment-variables/variable-interpolation/#interpolation-syntax
# find: ((?<!\$)\$\{([A-Z_]+))\}
# replace: ${$1?error}

# <TEMPLATE>
# -ts:
#   extends:
#     file: ./../common/services.yml
#     service: tailscale
#   networks:
#     - -ts
#   volumes:
#     - -ts:${TS_STATE_DIR?error}
#   environment:
#     - TS_SERVE_CONFIG=/-ts
#     - TS_HOSTNAME=
#   configs:
#     - -ts

services:

  plex-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - plex-ts
    volumes:
      - plex-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/plex-ts
      - TS_HOSTNAME=plex
      - TS_EXTRA_ARGS=--advertise-tags=tag:plex,tag:container,tag:service,tag:slippi
    configs:
      - plex-ts

  radarr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    volumes:
      - radarr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/radarr-ts
      - TS_HOSTNAME=radarr
    configs:
      - radarr-ts
    networks:
      - radarr-ts

  sonarr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - sonarr-ts
    volumes:
      - sonarr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/sonarr-ts
      - TS_HOSTNAME=sonarr
    configs:
      - sonarr-ts

  lidarr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - lidarr-ts
    volumes:
      - lidarr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/lidarr-ts
      - TS_HOSTNAME=lidarr
    configs:
      - lidarr-ts

  readarr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - readarr-ts
    volumes:
      - readarr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/readarr-ts
      - TS_HOSTNAME=readarr
    configs:
      - readarr-ts

  calibre-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - calibre-ts
    volumes:
      - calibre-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/calibre-ts
      - TS_HOSTNAME=calibre
    configs:
      - calibre-ts

  cw-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - calibre-web-ts
    volumes:
      - calibre-web-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/calibre-web-ts
      - TS_HOSTNAME=cw
      - TS_EXTRA_ARGS=--advertise-tags=tag:container,tag:service,tag:kobo
    configs:
      - calibre-web-ts

  prowlarr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - prowlarr-ts
    volumes:
      - prowlarr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/prowlarr-ts
      - TS_HOSTNAME=prowlarr
    configs:
      - prowlarr-ts

  bazarr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - bazarr-ts
    volumes:
      - bazarr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/bazarr-ts
      - TS_HOSTNAME=bazarr
    configs:
      - bazarr-ts

  qb-ts: # qbittorrent
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - qbittorrent-ts
    volumes:
      - qbittorrent-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/qbittorrent-ts
      - TS_HOSTNAME=qb
    configs:
      - qbittorrent-ts

  nzb-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - nzbget-ts
    volumes:
      - nzbget-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/nzbget-ts
      - TS_HOSTNAME=nzb
    configs:
      - nzbget-ts

  overseerr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - overseerr-ts
    volumes:
      - overseerr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/overseerr-ts
      - TS_HOSTNAME=overseerr
      - TS_EXTRA_ARGS=--advertise-tags=tag:container,tag:service,tag:slippi
    configs:
      - overseerr-ts

  maintainerr-ts:
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - maintainerr-ts
    volumes:
      - maintainerr-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/maintainerr-ts
      - TS_HOSTNAME=maintainerr
      # - TS_EXTRA_ARGS=
    configs:
      - maintainerr-ts

  taut-ts: # tautulli
    extends:
      file: ./../common/services.yml
      service: tailscale
    networks:
      - tautulli-ts
    volumes:
      - tautulli-ts:${TS_STATE_DIR?error}
    environment:
      - TS_SERVE_CONFIG=/tautulli-ts
      - TS_HOSTNAME=taut
      # - TS_EXTRA_ARGS=
    configs:
      - tautulli-ts

  autobrr-ts:
      extends:
        file: ./../common/services.yml
        service: tailscale
      networks:
        - autobrr-ts
      volumes:
        - autobrr-ts:${TS_STATE_DIR?error}
      environment:
        - TS_SERVE_CONFIG=/autobrr-ts
        - TS_HOSTNAME=autobrr
        # - TS_EXTRA_ARGS=
      configs:
        - autobrr-ts
