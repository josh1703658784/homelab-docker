services:

  defaults:
    restart: always
    read_only: true
    tmpfs:
      - /tmp
      - /run
      - /var/run
    environment:
      - TZ=${TZ?error}
      - PGID=${PGID?error}
      - PUID=${PUID?error}
    cap_drop: [ALL]
    security_opt:
      - no-new-privileges:true

  lsio:
    # image: lscr.io/linuxserver/____:latest
    restart: always
    read_only: true
    tmpfs:
      - /run:exec
      - /tmp
    environment:
      - TZ=${TZ?error}
      - PGID=${PGID?error}
      - PUID=${PUID?error}
    cap_drop: [ALL]
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true

  # tailscale-proxy:
  #   image: ghcr.io/josh1703658784/tailscale-serve-https:v1.72.1
  #   environment:
  #     - TZ=${TZ?error}
  #     - PUID=${PUID?error}
  #     - PGID=${PGID?error}
  #     - TS_AUTHKEY=${TS_AUTHKEY?error}
  #     - TS_STATE_DIR=${TS_STATE_DIR?error}
  #     - TS_USERSPACE=true
  #     - TS_ACCEPT_DNS=true
  #     - TS_SERVE_MODE=${TS_SERVE_MODE?error}
  #   volumes:
  #     - ${TS_STATE_DIR?error}
  #   healthcheck:
  #     test: ["CMD-SHELL", "tailscale status"]
  #     interval: 1s
  #     timeout: 5s
  #     retries: 60
  #   cap_add:
  #     - net_admin
  #     - sys_module
  #   restart: unless-stopped

  tailscale:
    image: tailscale/tailscale
    # read_only: true # this needs resolved first https://github.com/docker/compose/issues/12031
    environment:
      - TZ=${TZ?error}
      - TS_ACCEPT_DNS=true
      - TS_AUTHKEY=${TS_AUTHKEY?error}
      - TS_STATE_DIR=${TS_STATE_DIR?error}
      - TS_USERSPACE=true
    volumes:
      - ${TS_STATE_DIR?error}
    healthcheck:
      test: ["CMD-SHELL", "tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60
    restart: always
    cap_drop: [ALL]
    dns: 100.100.100.100
    security_opt:
      - no-new-privileges:true

  # tailscale-drive:
  #   image: ghcr.io/josh1703658784/tailscale-drive:v1.76.1
  #   environment:
  #     - TZ=${TZ?error}
  #     - TS_AUTHKEY=${TS_AUTHKEY?error}
  #     - TS_STATE_DIR=${TS_STATE_DIR?error}
  #     - TS_USERSPACE=true
  #     - TS_ACCEPT_DNS=true
  #   volumes:
  #     - ${TS_STATE_DIR?error}
  #   healthcheck:
  #     test: ["CMD-SHELL", "tailscale status"]
  #     interval: 1s
  #     timeout: 5s
  #     retries: 60
  #   restart: always
  #   cap_drop:
  #     - ALL
